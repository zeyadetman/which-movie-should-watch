{"version":3,"sources":["components/Input.jsx","components/Button.jsx","components/Home/Home.jsx","serviceWorker.js","index.js"],"names":["Input","react_default","a","createElement","className","type","this","props","style","border","padding","margin","borderBottom","width","minWidth","textAlign","color","fontWeight","onChange","placeholder","Component","Button","onClick","position","top","cursor","borderRadius","userSelect","transition","background","boxShadow","text","Home","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","movie1","movie2","movie1Info","movie2Info","isCompare","movie1Change","bind","assertThisInitialized","movie2Change","handleCompare","e","console","log","target","value","setState","_this2","urlMovie1","concat","urlMovie2","fetch","then","res","json","catch","r","_this3","mov1rate","mov2rate","height","bottom","left","right","Ratings","forEach","rate","Source","Value","split","slice","fontSize","Title","Button_Button","Input_Input","Boolean","window","location","hostname","match","ReactDOM","render","Home_Home","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.6f40c32c.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n\r\nexport default class Input extends Component {\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"input-comp\"\r\n                type={this.props.type}\r\n                style={{\r\n                    border: 'none',\r\n                    padding: '5px',\r\n                    margin: '5px',\r\n                    borderBottom: '1px solid #000',\r\n                    width: '20%',\r\n                    minWidth: '200px',\r\n                    textAlign: 'center',\r\n                    color: '#000',\r\n                    fontWeight: '800'\r\n                }}\r\n                onChange={this.props.onChange}\r\n                placeholder={this.props.placeholder}\r\n            />\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\n\r\nexport default class Button extends Component {\r\n    render() {\r\n        return (\r\n            <button\r\n                onClick={this.props.onClick}\r\n                className=\"button-comp\"\r\n                style={{\r\n                    padding: '15px 30px',\r\n                    border: 'none',\r\n                    position: 'relative',\r\n                    top: '0',\r\n                    cursor: 'pointer',\r\n                    borderRadius: '3px',\r\n                    margin: '15px 0 11px 0',\r\n                    textAlign: 'center',\r\n                    userSelect: 'none',\r\n                    transition: 'all 0.2s ease',\r\n                    background: '#fc3',\r\n                    boxShadow: '0px 5px rgb(171, 141, 51)',\r\n                    color: '#000',\r\n                    fontWeight: '800'\r\n                }}\r\n            >{this.props.text}</button>\r\n        )\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport Input from '../Input';\r\nimport Button from '../Button';\r\nimport '../../style.css';\r\n\r\nimport 'antd/dist/antd.css';\r\nexport default class Home extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            movie1: '',\r\n            movie2: '',\r\n            movie1Info: {},\r\n            movie2Info:{},\r\n            isCompare: false\r\n        };\r\n\r\n        this.movie1Change = this.movie1Change.bind(this);\r\n        this.movie2Change = this.movie2Change.bind(this);\r\n        this.handleCompare = this.handleCompare.bind(this);\r\n    }\r\n\r\n    movie2Change(e) {\r\n        console.log(e.target.value);\r\n        this.setState({movie1: e.target.value});\r\n    }\r\n\r\n    movie1Change(e) {\r\n        console.log(e.target.value);\r\n        this.setState({movie2: e.target.value});\r\n    }\r\n\r\n    handleCompare() { \r\n        const urlMovie1 = `http://omdbapi.com/?apikey=a5cbd3f6&t=${this.state.movie1}`\r\n        const urlMovie2 = `http://omdbapi.com/?apikey=a5cbd3f6&t=${this.state.movie2}`\r\n        fetch(urlMovie1).then(res => res.json()).then(res=>{\r\n            this.setState({movie1Info: res})\r\n        }).catch(r=>{console.log(r)});\r\n        fetch(urlMovie2).then(res => res.json()).then(res=>{\r\n            this.setState({movie2Info: res})\r\n        }).then(()=> {\r\n            this.setState({isCompare: true})\r\n        }).catch(r=>{console.log(r)});\r\n    }\r\n\r\n    render() {\r\n        var mov1rate =0 , mov2rate =0;\r\n        return (\r\n            <div\r\n                style={{\r\n                    height: '90%',\r\n                    position: 'absolute',\r\n                    top: '0',\r\n                    bottom: '0',\r\n                    left: '0',\r\n                    right: '0',\r\n                    margin: 'auto',\r\n                }}\r\n            >\r\n            <div>\r\n            <h1 style={{\r\n                background: '#fc3',\r\n                textAlign: 'center',\r\n                padding: '20px',\r\n                margin: '25px auto',\r\n                width: '50%',\r\n                border: '5px solid',\r\n                fontWeight: '800'\r\n            }}>WHICH MOVIE SHOULD WATCH?</h1>\r\n            </div>\r\n                {\r\n                    (!this.state.isCompare) ? (\r\n                    <div style={{\r\n                        textAlign: 'center'\r\n                    }}>\r\n                        <div style={{\r\n                            margin: '5% 0'\r\n                        }}>\r\n                            <Input type=\"text\" placeholder=\"Movie Title\" onChange={this.movie1Change} />\r\n                            <Input type=\"text\" placeholder=\"Movie Title\" onChange={this.movie2Change}/>\r\n                        </div>\r\n                        <Button text=\"COMPARE\" onClick={this.handleCompare} />\r\n                    </div>\r\n                    ) : (\r\n                        <div style={{\r\n                            textAlign: 'center'\r\n                        }}>\r\n                            {\r\n                                this.state.movie1Info.Ratings? this.state.movie1Info.Ratings.forEach((rate)=>{\r\n                                    if(rate.Source === 'Internet Movie Database')\r\n                                        mov1rate +=+(rate.Value.split('/')[0]);\r\n                                    else if(rate.Source === 'Rotten Tomatoes')\r\n                                        mov1rate+=+(rate.Value.slice(0, -1))\r\n                                    else if(rate.Source === 'Metacritic')\r\n                                        mov1rate+=+(rate.Value.split('/')[0]);\r\n                                }): null\r\n                            }\r\n\r\n                            {\r\n                                this.state.movie2Info.Ratings?this.state.movie2Info.Ratings.forEach((rate)=>{\r\n                                    if(rate.Source === 'Internet Movie Database')\r\n                                        mov2rate +=+(rate.Value.split('/')[0]);\r\n                                    else if(rate.Source === 'Rotten Tomatoes')\r\n                                        mov2rate+=+(rate.Value.slice(0, -1))\r\n                                    else if(rate.Source === 'Metacritic')\r\n                                        mov2rate+=+(rate.Value.split('/')[0]);\r\n                                }):null\r\n                            }\r\n\r\n                            <p style={{\r\n                                fontSize: '2em',\r\n                                fontWeight: '900',\r\n                                background: '#fc3',\r\n                                padding: '15px',\r\n                                color: '#000',\r\n                            }}> {\r\n                                mov1rate>mov2rate?this.state.movie1Info.Title:this.state.movie2Info.Title||'Go Sleep...'\r\n                            }</p>\r\n\r\n                            <Button text=\"Play Again\" onClick={()=>this.setState({isCompare: false})} />\r\n                        </div>\r\n                    )\r\n                }\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './components/Home/Home';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}